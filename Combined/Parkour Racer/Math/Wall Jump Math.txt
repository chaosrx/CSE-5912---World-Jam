public GameObject Player
public GameObject Wall

public float SpeedOffWallOut;
public float SpeedOffWallUp;

//Causes a reflection off the wall and (speed/force) is added to the player

//getting the new foward
Vector3 wallNormal = wall.normal //code to get the normal from a raycast or collision
Vector3 playerFoward = Player.transform.foward;

float dotProduct = Vector3.Dot((PlayerFoward *-1), wallNormal);
Vector3 reflection = (2 * dotProduct) * wallNormal - (playerFoward * -1);


//assigning the new foward
player.transform.foward = reflection;

//adding speed from the jump 
Rigidbody playRB = Player.GetComponent<Rigidbody>();
playRB .AddForce(transform.forward * SpeedOffWallOut);
playRB .AddForce(Vector3.up * SpeedOffWallUp);

